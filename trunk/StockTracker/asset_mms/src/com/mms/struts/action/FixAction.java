/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mms.struts.action;

import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.beanutils.BeanUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.mms.dao.IEmployee;
import com.mms.pojo.Asset;
import com.mms.pojo.Employee;
import com.mms.pojo.Fix;
import com.mms.service.IAssetService;
import com.mms.service.IFixService;
import com.mms.struts.form.FixForm;
import com.mms.util.Utils;

/** 
 * MyEclipse Struts
 * Creation date: 10-16-2009
 * 
 * XDoclet definition:
 * @struts.action path="/fix" name="fixForm" scope="request" validate="true"
 */
public class FixAction extends DispatchAction {
	private IAssetService asi;
	public IAssetService getAsi() {
		return asi;
	}

	public void setAsi(IAssetService asi) {
		this.asi = asi;
	}
	
	private IFixService ifs;
	public IFixService getIfs() {
		return ifs;
	}

	public void setIfs(IFixService ifs) {
		this.ifs = ifs;
	}


	private IEmployee i;

	public IEmployee getI() {
		return i;
	}

	public void setI(IEmployee i) {
		this.i = i;
	}

	//申请报修
	public ActionForward fixapply(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		FixForm fixForm = (FixForm) form;
		Fix f=new Fix();
		try {
			BeanUtils.copyProperties(f,fixForm);
		} catch (IllegalAccessException e) {
			e.printStackTrace();
		} catch (InvocationTargetException e) {
			e.printStackTrace();
		}
		String rrt=fixForm.getRefixReportTime();
		String rtp=fixForm.getRefixTimePre();
		Date rrt1=Utils.strToDate(rrt);
		Date rtp1=Utils.strToDate(rtp);
		Date defaultTime=Utils.strToDate("2009-01-01");
		f.setFixTimeCheck(defaultTime);
		f.setFixTimeReturn(defaultTime);
		f.setFixTimePre(rtp1);
		f.setFixReportTime(rrt1);
		Employee e=i.findById(2);
		f.setEmployeeByFixCheckAdmin(e);		
		f.setEmployeeByFixReportId(e);
		
		Integer id=fixForm.getAssetId();
		Asset fixasset=asi.findById(id);
		fixasset.setAssetState("0");
		asi.updateAsset(fixasset);
		f.setAsset(fixasset);		

		String price=fixForm.getRefixPrice();
		Double p=Double.parseDouble(price);	
		f.setFixPrice(p);
		

		Asset a=new Asset();
		String aid=request.getParameter("m");
		Integer id2=Integer.parseInt(aid);
		a=asi.findById(id2);
		a.setAssetState("4");
		asi.updateAsset(a);
		f.setAsset(a);
		
		f.setFixState("0");
		ifs.addFix(f);
		return mapping.findForward("fixlist");
	}
	//列出正在修理的资产
	public ActionForward fixedlist(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		Fix fix=new Fix();
		List<Fix> l= ifs.findFixAll(); 
		List<Fix> als=new ArrayList<Fix>();
		for(int i=0;i<l.size();i++)
		{
			fix=(Fix) l.get(i);
			if(fix.getAsset().getAssetState().equals("3")&&fix.getFixState().equals("1"))
			{
				fix=ifs.findFixById(fix.getFixId());
				als.add(fix);
			}
		}
		request.setAttribute("fl", als);
		return mapping.findForward("fixedlist");
	}
	//修缮归还资产
	public ActionForward fixedback(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		Asset backasset=new Asset();
		String id=request.getParameter("m");
		Integer id1=Integer.parseInt(id);
		backasset=asi.findById(id1);
		backasset.setAssetState("0");
		asi.updateAsset(backasset);
		Fix f=new Fix();
		String fixid=request.getParameter("n");
		Integer fid=Integer.parseInt(fixid);
		f=ifs.findFixById(fid);
		f.setFixTimeReturn(new Date());
		f.setAsset(backasset);
		f.setFixState("2");
		ifs.updateFix(f);
		if(backasset.getAssetUseType().equals("1"))
		{
			Long totaltime=Utils.totalfixTime(backasset,f);
			String total=Long.toString(totaltime);
			backasset.setAssetUseTime(total);
		}
		asi.updateAsset(backasset);
		return mapping.findForward("fixedback");
	}
}