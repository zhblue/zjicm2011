/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mms.struts.action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.mms.beans.Dep;
import com.mms.pojo.Asset;
import com.mms.pojo.AssetType;
import com.mms.service.IAssetTypeService;
import com.mms.service.ICheckService;
import com.mms.struts.form.CheckForm;
import com.mms.util.Utils;

/** 
 * MyEclipse Struts
 * Creation date: 11-20-2009
 * 
 * XDoclet definition:
 * @struts.action path="/check" name="checkForm" scope="request" validate="true"
 */
public class CheckAction extends Action {
	
	private ICheckService ic;
	
	
	private IAssetTypeService iats;
	
	public ICheckService getIc() {
		return ic;
	}
	public void setIc(ICheckService ic) {
		this.ic = ic;
	}
	
	public IAssetTypeService getIats() {
		return iats;
	}
	public void setIats(IAssetTypeService iats) {
		this.iats = iats;
	}
	
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CheckForm checkForm = (CheckForm) form;
		String name=checkForm.getAssetName();
		String number=checkForm.getAssetNumber();
		String usetype=checkForm.getAssetUseType();
		Integer typeid=checkForm.getAssetTypeId();
		AssetType at=new AssetType();
		at=iats.findTypeById(typeid);
		Asset asset=new Asset();
		asset.setAssetName(name);
		asset.setAssetNumber(number);
		asset.setAssetUseType(usetype);
		asset.setAssetType(at);
		List l=ic.serchAll(asset);
		
		List dep=new ArrayList();
		for(int i=0;i<l.size();i++)
        {
        	Dep depcount=new Dep();
        	asset=(Asset)l.get(i);
        	String totaltime=asset.getAssetUseTime();
            Long total=Long.valueOf(totaltime);
            System.out.println("资产使用时间"+total);
            String d=Utils.depCount(asset,total);
            System.out.println("资产折旧率"+total);
            depcount.setDep(d);
            depcount.setAssetName(asset.getAssetName());
            depcount.setAssetNumber(asset.getAssetNumber());
            depcount.setAssetState(asset.getAssetState());
            depcount.setAssetUseType(asset.getAssetUseType());
            depcount.setAssetId(asset.getAssetId());
		    dep.add(depcount);		
        }
		request.setAttribute("al", dep);
		return mapping.findForward("check");
	}
	
}